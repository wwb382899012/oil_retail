<?php
/**
 * This is Entity Repository for UserRight.
 * Auto Generated.
 * DateTime: 2018-08-24 16:17:56
 * Describe：
 *
 */

namespace app\ddd\Admin\Repository\Right;

use app\ddd\Admin\Repository\CacheDependency;
use app\ddd\Common\Domain\Value\Operator;
use app\ddd\Common\Repository\RedisCache;
use app\ddd\Admin\Domain\Right\UserRight;
use app\ddd\Admin\Domain\Right\IUserRightRepository;
use ddd\Common\Repository\EntityRepository;

use ddd\Infrastructure\error\ZModelSaveFalseException;

class UserRightRepository extends EntityRepository implements IUserRightRepository
{

    use RedisCache;


    public function getNewEntity()
    {
        return new UserRight();
    }

    public function getActiveRecordClassName()
    {
        return "SystemUserRight";
    }

    /**
     * @param \SystemUserRight $model
     * @return UserRight
     * @throws \Exception
     */
    public function dataToEntity($model)
    {
        $entity = $this->getNewEntity();
        if (!empty($entity))
        {
            $values=$model->getAttributes();
            $entity->setAttributes($values, false);
            $entity->update_user=new Operator($model->update_user_id,$model->update_user->name);
            $entity->addModuleActions($model->getRightCodes());
        }
        return $entity;
    }

    /**
     * @param $id
     * @return UserRight
     */
    public function findById($id)
    {
        // TODO: Change the autogenerated stub
        $entity=$this->getEntityFromCache($id);
//        $entity=false;//TODO
        if($entity==false)
        {
            $entity= parent::findById($id);
            $this->setCache($id,$entity,360000,CacheDependency::getDependency(CacheDependency::ADMIN));
        }

        return $entity;
    }

    /**
     * @param UserRight $entity
     * @return UserRight
     * @throws \Exception
     */
    public function store($entity) {
        $id = $entity->getId();
        if (!empty($id)) {
            $model = $this->model()->findByPk($id);
            if (empty($model)) {
                $this->activeRecordClassName = $this->getActiveRecordClassName();
                $model = new $this->activeRecordClassName;
                $model->user_id = $entity->user_id;
            }
        }

        //这里需要处理一下新增时设置主键值的问题
        $values=$entity->getAttributes();
        $model->right_codes=json_encode($values["moduleActions"]);
        if ($model->isNewRecord) {
            $model->create_user_id = $entity->create_user->id;
            if (empty($entity->create_time))
                $model->create_time = new \CDbExpression("now()");
        }
        $model->update_user_id = $entity->update_user->id;
        $model->update_time = new \CDbExpression("now()");
        if (!$model->save())
            throw new ZModelSaveFalseException($model);
        $this->clearCache($entity->getId());
        $this->clearDependencyCache();
        return $entity;
    }

    /**
     * 清除依赖缓存
     */
    protected function clearDependencyCache()
    {
        CacheDependency::clearDependencyCache(CacheDependency::ADMIN);
    }


}
