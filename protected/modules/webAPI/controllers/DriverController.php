<?php

/**
 * Desc: 司机
 * User: wwb
 * Date: 2017/10/9 0009
 * Time: 10:03
 */


class DriverController extends WebAPIController
{
    public function pageInit()
    {
        parent::pageInit(); // TODO: Change the autogenerated stub
        $this->rightCode = 'driver';
    }

    /**
     * @api {POST} /webAPI/driver/list [list]司机列表
     * @apiName list
     * @apiGroup WebAPI - driver
     * @apiVersion 1.0.0
     * @apiParam (输入字段) {string} search 查询字段，<font color=red>非必填</font>
     * @apiParam (输入字段) {int} page 页数 <font color=red>非必填</font>
     * @apiParam (输入字段) {int} pageSize 分页大小 <font color=red>非必填</font>
     * @apiExample {json} 输入示例:
     * {
     * "page":2,
     * "pageSize":15,
     * "search"{
     *      "driver_name":'司机A',
     *      "logistics_name":'朝阳物流',
     *      "status":'1',
     *      'logistics_id'=>'2',
     *      "number":'粤B2324',
     *      }
     * }
     * @apiSuccessExample {json} 输出示例:
     *{
     *"state": 0,
     *"data": {
     *      "pageSize": 10,
     *      "totalPages": 1,
     *      "page": "1",
     *      "totalRows": "1",
     *      "data": [{
     *               "driver_id": "22",
     *               "logistics_id":"2",
     *               "customer_id":"21",
     *               "name": "司机A",
     *               "status_name": "启用",
     *               "phone": "13751548454",
     *               "logistics_name":"物流企业",
     *               "number":"车牌号",
     *               "is_can_edit": false,
     *               "is_can_view": false,
     *          }],
     *      }
     *}
     * @apiParam (输出字段) {string} state 状态码
     * @apiParam (输出字段) {array} data 数据信息
     * @apiParam (输出字段-data) {int} totalPages 列表总页数
     * @apiParam (输出字段-data) {int} totalRows 列表总记录数
     * @apiParam (输出字段-data) {int} page 当前页数
     * @apiParam (输出字段-data) {int} pageSize 每页显示记录数
     * @apiParam (输出字段-data) {array} data 列表行数据信息
     * @apiParam (输出字段-data-data-rows) {int} driver_id 标识id
     * @apiParam (输出字段-data-data-rows) {int} logistics_id 物流企业id
     * @apiParam (输出字段-data-data-rows) {int} customer_id 客户id
     * @apiParam (输出字段-data-data-rows) {string} name 司机姓名
     * @apiParam (输出字段-data-data-rows) {string} phone 手机号
     * @apiParam (输出字段-data-data-rows) {string} status_name 状态
     * @apiParam (输出字段-data-data-rows) {string} logistics_name 所属物流企业
     * @apiParam (输出字段-data-data-rows) {string} number 车牌号
     * @apiParam (输出字段-data-data-rows) {string} is_can_edit 是否可修改
     * @apiParam (输出字段-data-data-rows) {string} is_can_view 是否可查看
     */
	public function actionList()
	{
        $search = $this->getSearch();
        $attr = array(
            'a.name*'=>$search['driver_name'],
            'b.name*'=>$search['logistics_name'],
            'a.status'=>$search['status'],
            'b.logistics_id'=>$search['logistics_id']
        );

        $where = $this->getWhereSql($attr);
        //车牌号查询条件
        $where .= empty($search['number'])?" ":" and a.driver_id in(select c.driver_id from t_driver_vehicle_relation c inner join t_vehicle d on c.vehicle_id=d.vehicle_id and d.number='{$search['number']}')";
        $sql = "SELECT  {col}

                FROM t_driver a
                     left join t_logistics_company b on a.logistics_id = b.logistics_id

                ".$where." ORDER BY driver_id desc";

        $fields = 'a.driver_id,a.customer_id,a.logistics_id,a.name,a.status,a.phone,b.name logistics_name,
                   (select group_concat(bb.number) from t_driver_vehicle_relation aa inner join t_vehicle bb on aa.vehicle_id=bb.vehicle_id where aa.driver_id=a.driver_id group by aa.driver_id)number
                   ';

        $data = $this->getPageData($sql, $fields);

        if(Utility::isEmpty($data->data)){
            $this->returnSuccess([]);
        }


        foreach($data->data as & $datum){
            $datum['status_name'] = Map::getStatusName('driver_status', $datum['status']);
            $datum['is_can_view'] = true;
            $datum['is_can_edit'] = false;

        }

        $this->returnSuccess($data);
	}

    /**
     * @api {POST} /webAPI/driver/export [export] 导出excel
     * @apiName export
     * @apiGroup WebAPI - driver
     * @apiVersion 1.0.0
     * @apiParam (输入字段) {string} search 查询字段，<font color=red>非必填</font>
     * @apiParam (输入字段) {int} page 页数 <font color=red>非必填</font>
     * @apiParam (输入字段) {int} pageSize 分页大小 <font color=red>非必填</font>
     * @apiExample {json} 输入示例:
     * {
     * "search"{
     *      "driver_name":'司机A',
     *      "logistics_name":'朝阳物流',
     *      "status":'1',
     *      }
     * }
     * @apiSuccessExample {json} 输出示例:导出下载excel表格
     *{
     *"state": 0,
     *"data": {
     *      "search": null,
     *      "data": {
     *          "pageCount": 124,
     *          "rows": [{
     *               "driver_id": "1392",
     *               "name": "司机A",
     *               "status_name": "启用",
     *               "phone": "13751548454",
     *               "logistics_name":"物流企业",
     *               "is_can_edit": false,
     *               "is_can_view": false,
     *          }],
     *          }
     *      }
     *}
     * @apiParam (输出字段) {string} state 状态码
     * @apiParam (输出字段) {array} data 数据信息
     * @apiParam (输出字段-data) {string} search 查询字段
     * @apiParam (输出字段-data) {array} data 列表数据
     * @apiParam (输出字段-data-data) {int} total 列表总记录数
     * @apiParam (输出字段-data-data) {array} rows 列表行数据信息
     * @apiParam (输出字段-data-data-rows) {int} driver_id 标识id
     * @apiParam (输出字段-data-data-rows) {string} name 司机姓名
     * @apiParam (输出字段-data-data-rows) {string} phone 手机号
     * @apiParam (输出字段-data-data-rows) {string} status_name 状态
     * @apiParam (输出字段-data-data-rows) {string} logistics_name 所属物流企业
     */
    public function actionExport()
    {
        $search = $this->getSearch();
        $attr = array(
            'a.name*'=>$search['driver_name'],
            'b.name*'=>$search['logistics_name'],
            'a.status'=>$search['status']
        );

        $fields = "a.driver_id 编号,
                   a.name 姓名,
                   b.name 所属企业,
                   a.phone 电话,
                   (case when a.status=0 then '禁用' when a.status=1 then '启用' end) 状态

                  ";

        $sql = 'select ' . $fields . ' from t_driver a
                left join t_logistics_company b on a.logistics_id = b.logistics_id
                 ' . $this->getWhereSql($attr) . ' order by a.driver_id desc ';

        $data = Utility::query($sql);

        $this->exportExcel($data);
    }

    /**
     * @api {GET} /webAPI/driver/detail [detail]获取司机详情
     * @apiName detail
     * @apiGroup WebAPI - driver
     * @apiVersion 1.0.0
     * @apiParam (输入字段) {int} customer_id 客户id <font color=red>必填</font>
     * @apiExample {json} 输入示例:
     * {
     * "customer_id":2,
     * }
     * @apiSuccessExample {json} 输出示例:
     *{
     *"state": 0,
     *"data": {
     *      "search": null,
     *      "data": {
     *           "driver_id": "1392",
     *           "name": "司机A",
     *           "status_name": "启用",
     *           "phone": "13751548454",
     *           "logistics_name":"物流企业",
     *           "vehicles":[
     *             {
     *               "vehicle_id": "22",
     *               "number": "粤A1189",
     *               "model": "wxhc",
     *                ...
     *              }
     *            ],
     *           "is_can_edit": false,
     *      }
     *}
     * @apiParam (输出字段) {string} state 状态码
     * @apiParam (输出字段) {array} data 数据信息
     * @apiParam (输出字段-data) {id} driver_id 标识id
     * @apiParam (输出字段-data) {string} name 司机姓名
     * @apiParam (输出字段-data) {string} status_name 状态
     * @apiParam (输出字段-data) {string} phone 手机号
     * @apiParam (输出字段-data) {string} logistics_name 物流企业
     * @apiParam (输出字段-data) {string} is_can_edit 是否可修改
     * @apiParam (输出字段-data) {array} vehicles 车辆信息
     * @apiParam (输出字段-data-vehicle_items) {string} numbrt 车牌号
     */
    public function actionDetail()
    {
        $id = Mod::app()->request->getParam('customer_id');
        if (!Utility::checkQueryId($id)) {
            $this->returnError(RetailError::$PARAMS_PASS_ERROR);
        }

        //司机
        try{
        $servcie = new \app\ddd\Logistics\Application\Driver\DriverService();
        $driver = $servcie->getDriver($id);

        if(empty($driver))
            $this->returnError(BusinessError::outputError(\RetailError::$DRIVER_NOT_EXIST,array('driver_id'=>$id)));

        $this->returnSuccess($driver);
        }catch(Exception $e){
            $this->returnError(BusinessError::outputError(\RetailError::$OPERATE_FAILED, array('reason' => $e->getMessage())));
        }
    }

}

