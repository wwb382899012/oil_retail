<?php
/**
 * Desc: 企业额度管理
 * User: wwb
 * Date: 2017/10/9 0009
 * Time: 10:03
 */

use ddd\Quota\Domain\LogisticsQuotaLimit\ILogisticsQuotaLimitRepository;

class LogisticsQuotaController extends WebAPIController
{
    public function pageInit()
    {
        parent::pageInit(); // TODO: Change the autogenerated stub
        $this->rightCode = 'enterpriseQuota';
    }
    /**
 * @api {POST} /webAPI/logisticsQuota/list [list]企业额度管理
 * @apiName list
 * @apiGroup WebAPI - LogisticsQuota
 * @apiVersion 1.0.0
 * @apiParam (输入字段) {string} search 查询字段，<font color=red>非必填</font>
 * @apiParam (输入字段) {int} page 页数 <font color=red>非必填</font>
 * @apiParam (输入字段) {int} pageSize 分页大小 <font color=red>非必填</font>
 * @apiExample {json} 输入示例:
 * {
 * "page":2,
 * "pageSize":15,
 * "search"{
 *      "logistics_name":'朝阳物流',
 *      "status":'1',
 *      }
 * }
 * @apiSuccessExample {json} 输出示例:
 *{
 *"state": 0,
 *"data": {
 *      "pageSize": 10,
 *      "totalPages": 1,
 *      "page": "1",
 *      "totalRows": "1",
 *      "data": [{
 *               "logistics_id": "1",
 *               "logistics_name": "朝阳物流",
 *               "start_date": "2018-08-08",
 *               "end_date": "2018-08-10",
 *               "status_name": "正常",
 *               "credit_quota":"200",
 *               "available_quota":"50",
 *               "rate":"0.9",
 *               "daily_credit_quota":"100",
 *               "daily_available_quota":"10",
 *          }],
 *      }
 *}
 * @apiParam (输出字段) {string} state 状态码
 * @apiParam (输出字段) {array} data 数据信息
 * @apiParam (输出字段-data) {int} totalPages 列表总页数
 * @apiParam (输出字段-data) {int} totalRows 列表总记录数
 * @apiParam (输出字段-data) {int} page 当前页数
 * @apiParam (输出字段-data) {int} pageSize 每页显示记录数
 * @apiParam (输出字段-data) {array} data 列表行数据信息
 * @apiParam (输出字段-data-data) {int} logistics_id 物流企业id
 * @apiParam (输出字段-data-data) {string} logistics_name 物流企业
 * @apiParam (输出字段-data-data) {string} start_date 开始时间
 * @apiParam (输出字段-data-data) {string} end_date 结束时间
 * @apiParam (输出字段-data-data) {string} status_name 额度状态
 * @apiParam (输出字段-data-data) {string} credit_quota 企业额度
 * @apiParam (输出字段-data-data) {string} available_quota 企业可用额度
 * @apiParam (输出字段-data-data) {string} rate 当日额度占比
 * @apiParam (输出字段-data-data) {string} daily_credit_quota 当日额度
 * @apiParam (输出字段-data-data) {string} daily_available_quota 当日可用额度
 */
    public function actionList()
    {
        $search = $this->getSearch();
        $attr = array(
            'b.name*'=>$search['logistics_name'],
        );

        $where = $this->getWhereSql($attr);

        $nowDate = Utility::getDate();

        if ($search['status'] == '1') {
            $where.=" and c.start_date<='{$nowDate}' and c.end_date>='{$nowDate}'";

        } elseif ($search['status'] == '-1') {
            $where.=" and (c.start_date>'{$nowDate}' or c.end_date<'{$nowDate}')";
        }

        $sql = "select {col} from t_logistics_quota a
                left join t_logistics_company b on a.logistics_id = b.logistics_id
                left join t_logistics_credit_quota c on a.logistics_id = c.logistics_id
                left join t_logistics_daily_quota e on e.logistics_id=a.logistics_id and `current_date`=current_date()
                " . $where . " order by a.create_time desc,a.id desc";

        $fields = "a.id, a.logistics_id, b.name logistics_name, a.used_quota, a.frozen_quota,
                   ifnull(c.credit_quota, 0) credit_quota, c.start_date, c.end_date,
                   ifnull(e.used_quota, 0) day_used_quota, ifnull(e.frozen_quota,0) day_frozen_quota";

        $data = $this->getPageData($sql, $fields);

        if(Utility::isEmpty($data->data)){
            $this->returnSuccess([]);
        }

        //每日限额
        $limit = \ddd\Infrastructure\DIService::get(\app\ddd\Quota\Application\LogisticsQuotaLimit\LogisticsQuotaLimitService::class)->getActiveLogisticsQuotaLimit();
        $limitRate = $limit->rate;
        
        $currentTimeStamp = strtotime($nowDate);
        foreach($data->data as & $datum){
            $actualCreditQuota = $datum['credit_quota'];
            $datum['status_name'] = "正常";
            if (strtotime($datum['start_date']) > $currentTimeStamp || strtotime($datum['end_date']) < $currentTimeStamp) {
                $actualCreditQuota = 0;
                $datum['status_name'] = "过期";
            }

            $datum['credit_quota'] = Utility::numberFormatFen2Yuan($actualCreditQuota);
            $datum['available_quota'] = Utility::numberFormatFen2Yuan($actualCreditQuota - $datum['used_quota'] - $datum['frozen_quota']);
            $datum['rate'] = $limitRate;

            $actualDailyCreditQuota = $actualCreditQuota * $limitRate;
            $datum['daily_credit_quota'] = Utility::numberFormatFen2Yuan($actualDailyCreditQuota);
            $datum['daily_available_quota'] = Utility::numberFormatFen2Yuan($actualDailyCreditQuota - $datum['day_used_quota'] - $datum['day_frozen_quota']);
        }

        $this->returnSuccess($data);
    }


    /**
     * @api {POST} /webAPI/LogisticsQuota/export [export]导出excel
     * @apiName export
     * @apiGroup WebAPI - LogisticsQuota
     * @apiVersion 1.0.0
     * @apiParam (输入字段) {string} search 查询字段，<font color=red>非必填</font>
     * @apiExample {json} 输入示例:
     * {
     * "search"{
     *      "logistics_name":'朝阳物流',
     *      "status":'1',
     *      }
     * }
     * @apiSuccessExample {json} 输出示例:
     *{
     *"state": 0,
     *"data": {
     *      "pageSize": 10,
     *      "totalPages": 1,
     *      "page": "1",
     *      "totalRows": "1",
     *      "data": [{
     *               "logistics_id": "1",
     *               "logistics_name": "朝阳物流",
     *               "start_date": "2018-08-08",
     *               "end_date": "2018-08-10",
     *               "status_name": "正常",
     *               "credit_quota":"200",
     *               "available_quota":"50",
     *               "rate":"0.9",
     *               "daily_credit_quota":"100",
     *               "daily_available_quota":"10",
     *          }],
     *      }
     *}
     * @apiParam (输出字段) {string} state 状态码
     * @apiParam (输出字段) {array} data 数据信息
     * @apiParam (输出字段-data) {int} totalPages 列表总页数
     * @apiParam (输出字段-data) {int} totalRows 列表总记录数
     * @apiParam (输出字段-data) {int} page 当前页数
     * @apiParam (输出字段-data) {int} pageSize 每页显示记录数
     * @apiParam (输出字段-data) {array} data 列表行数据信息
     * @apiParam (输出字段-data-data) {int} logistics_id 物流企业id
     * @apiParam (输出字段-data-data) {string} logistics_name 物流企业
     * @apiParam (输出字段-data-data) {string} start_date 开始时间
     * @apiParam (输出字段-data-data) {string} end_date 结束时间
     * @apiParam (输出字段-data-data) {string} status_name 额度状态
     * @apiParam (输出字段-data-data) {string} credit_quota 企业额度
     * @apiParam (输出字段-data-data) {string} available_quota 企业可用额度
     * @apiParam (输出字段-data-data) {string} rate 当日额度占比
     * @apiParam (输出字段-data-data) {string} daily_credit_quota 当日额度
     * @apiParam (输出字段-data-data) {string} daily_available_quota 当日可用额度
     */
    public function actionExport()
    {
        $search = $this->getSearch();
        $attr = array(
            'b.name*'=>$search['logistics_name'],
        );

        $where = $this->getWhereSql($attr);

        $nowDate = Utility::getDate();

        if ($search['status'] == '1') {
            $where.=" and c.start_date<='{$nowDate}' and c.end_date>='{$nowDate}'";

        } elseif ($search['status'] == '-1') {
            $where.=" and (c.start_date>'{$nowDate}' or c.end_date<'{$nowDate}')";
        }

        $fields = "b.name 物流公司, a.used_quota, a.frozen_quota, ifnull(c.credit_quota, 0) credit_quota, c.start_date, c.end_date,
                   ifnull(e.used_quota, 0) day_used_quota, ifnull(e.frozen_quota, 0) day_frozen_quota";

        $sql = "select  " . $fields . " from t_logistics_quota a
                left join t_logistics_company b on a.logistics_id = b.logistics_id
                left join t_logistics_credit_quota c on a.logistics_id = c.logistics_id
                left join t_logistics_daily_quota e on e.logistics_id=a.logistics_id and `current_date`=current_date()
                ".$where." order by a.create_time desc,a.id desc";

        $data = Utility::query($sql);

        //每日限额
        $limit = \ddd\Infrastructure\DIService::get(\app\ddd\Quota\Application\LogisticsQuotaLimit\LogisticsQuotaLimitService::class)->getActiveLogisticsQuotaLimit();
        $limitRate = $limit->rate;

        $currentTimeStamp = strtotime($nowDate);
        foreach($data as & $datum){
            $actualCreditQuota = $datum['credit_quota'];
            $datum['额度状态'] = "正常";
            if (strtotime($datum['start_date']) > $currentTimeStamp || strtotime($datum['end_date']) < $currentTimeStamp) {
                $actualCreditQuota = 0;
                $datum['额度状态'] = "过期";
            }

            $datum['企业额度'] = Utility::numberFormatFen2Yuan($actualCreditQuota);
            $datum['企业可用额度'] = Utility::numberFormatFen2Yuan($actualCreditQuota - $datum['used_quota'] - $datum['frozen_quota']);
            $datum['每日额度占比'] = round($limitRate * 100) . '%';

            $actualDailyCreditQuota = $actualCreditQuota * $limitRate;
            $datum['每日企业额度'] = Utility::numberFormatFen2Yuan($actualDailyCreditQuota);//Utility::numberFormatFen2Yuan
            $datum['当日可用额度'] = Utility::numberFormatFen2Yuan($actualDailyCreditQuota - $datum['day_used_quota'] - $datum['day_frozen_quota']);
            $datum['开始时间'] =$datum['start_date'] ;
            $datum['结束时间'] =$datum['end_date'] ;

            unset($datum['used_quota']);
            unset($datum['frozen_quota']);
            unset($datum['start_date']);
            unset($datum['end_date']);
            unset($datum['day_used_quota']);
            unset($datum['day_frozen_quota']);
            unset($datum['credit_quota']);
        }

        $this->exportExcel($data,'',array(0=>'当日可用额度',1=>'每日企业额度',2=>'企业可用额度',3=>'企业额度'));
    }

    /**
     * @api {POST} /webAPI/LogisticsQuota/getLogisticsQuotaLog [getLogisticsQuotaLog]企业额度收支明细列表
     * @apiName getLogisticsQuotaLog
     * @apiGroup WebAPI - LogisticsQuota
     * @apiVersion 1.0.0
     * @apiParam (输入字段) {int} logistics_id 物流企业id，<font color=red>必填</font>
     * @apiParam (输入字段) {string} search 查询字段，<font color=red>非必填</font>
     * @apiParam (输入字段) {int} page 页数 <font color=red>非必填</font>
     * @apiParam (输入字段) {int} pageSize 分页大小 <font color=red>非必填</font>
     * @apiExample {json} 输入示例:
     * {
     * "page":2,
     * "pageSize":15,
     * "search"{
     *      "logistics_id":"1",
     *      "category":'1',
     *      "create_time_start":'2018-08-08',
     *      "create_time_end":'2018-08-08',
     *      }
     * }
     * @apiSuccessExample {json} 输出示例:
     *{
     *"state": 0,
     *"data": {
     *      "pageSize": 10,
     *      "totalPages": 1,
     *      "page": "1",
     *      "totalRows": "1",
     *      "data": [{
     *               "order_code": "201809140000003",
     *               "quota": "1000",
     *               "category_name": "物流还款",
     *               "create_time": "2018-08-16",
     *          }],
     *      },
     *"extra": {
     *       "logistics_name": "朝阳物流"
     *   }
     *}
     * @apiParam (输出字段) {string} state 状态码
     * @apiParam (输出字段) {array} data 数据信息
     * @apiParam (输出字段-data) {int} totalPages 列表总页数
     * @apiParam (输出字段-data) {int} totalRows 列表总记录数
     * @apiParam (输出字段-data) {int} page 当前页数
     * @apiParam (输出字段-data) {int} pageSize 每页显示记录数
     * @apiParam (输出字段-data) {array} data 列表行数据信息
     * @apiParam (输出字段-data-data) {int} order_code 订单编号
     * @apiParam (输出字段-data-data) {string} quota 额度明细/元
     * @apiParam (输出字段-data-data) {string} category_name 收支类型
     * @apiParam (输出字段-data-data) {string} create_time 时间
     * @apiParam (输出字段-data) {array} extra 其他信息
     * @apiParam (输出字段-data-extra) {string} logistics_name 物流企业
     */
    public function actionGetLogisticsQuotaLog()
    {
        $search = $this->getSearch();
        $attr = array(
            'a.category'=>$search['category'],
            'a.create_time>'=>$search['create_time_start'],
            'a.create_time<'=>$search['create_time_end'],
            'a.logistics_id'=>$search['logistics_id'],
        );

        $logistics_id = $search['logistics_id'];

        try {
            $service = new \app\ddd\Logistics\Application\LogisticsCompany\LogisticsCompanyService();
            $logisticsCompany = $service->getLogisticsCompany($logistics_id);

            $where = $this->getWhereSql($attr);

            $sql = "SELECT  {col}
                FROM t_logistics_quota_log a
                     left join t_order b on a.relation_id=b.order_id

                " . $where . " ORDER BY a.log_id DESC";

            $fields = 'a.relation_id,a.create_time,round(a.quota/100,2)quota,a.category,b.code order_code';

            $data = $this->getPageData($sql, $fields);

            if (Utility::isEmpty($data->data)) {
                $this->returnSuccess([],['logistics_name' => $logisticsCompany['name']]);
            }


            foreach ($data->data as & $datum) {
                $datum['category_name'] = Map::getStatusName('logistics_quota_log_category', $datum['category']);
                $datum['quota'] = number_format($datum['quota'],2);

                $datum['is_can_view'] = false;
                $datum['is_can_edit'] = false;

            }

            $this->returnSuccess($data, ['logistics_name' => $logisticsCompany['name']]);

        }
        catch(Exception $e){
            $this->returnError(BusinessError::outputError(\RetailError::$OPERATE_FAILED, array('reason' => $e->getMessage())));
        }

    }

    /**
     * @api {POST} /webAPI/logisticsQuota/getLogisticsDailyQuotaLog [getLogisticsDailyQuotaLog]企业当日额度收支明细列表
     * @apiName getLogisticsDailyQuotaLog
     * @apiGroup WebAPI - LogisticsQuota
     * @apiVersion 1.0.0
     * @apiParam (输入字段) {string} logistics_id 物流企业id，<font color=red>必填</font>
     * @apiParam (输入字段) {string} search 查询字段，<font color=red>非必填</font>
     * @apiParam (输入字段) {int} page 页数 <font color=red>非必填</font>
     * @apiParam (输入字段) {int} pageSize 分页大小 <font color=red>非必填</font>
     * @apiExample {json} 输入示例:
     * {
     * "page":2,
     * "pageSize":15,
     * "search"{
     *      "logistics_id":"1",
     *      "category":'1',
     *      "create_time_start":'2018-08-08',
     *      "create_time_end":'2018-08-08',
     *      }
     * }
     * @apiSuccessExample {json} 输出示例:
     *{
     *"state": 0,
     *"data": {
     *      "pageSize": 10,
     *      "totalPages": 1,
     *      "page": "1",
     *      "totalRows": "1",
     *      "data": [{
     *               "order_code": "201809140000003",
     *               "quota": "1000",
     *               "category_name": "物流还款",
     *               "create_time": "2018-08-16",
     *          }],
     *      },
     *"extra": {
     *       "logistics_name": "朝阳物流"
     *   }
     *}
     * @apiParam (输出字段) {string} state 状态码
     * @apiParam (输出字段) {array} data 数据信息
     * @apiParam (输出字段-data) {int} totalPages 列表总页数
     * @apiParam (输出字段-data) {int} totalRows 列表总记录数
     * @apiParam (输出字段-data) {int} page 当前页数
     * @apiParam (输出字段-data) {int} pageSize 每页显示记录数
     * @apiParam (输出字段-data) {array} data 列表行数据信息
     * @apiParam (输出字段-data-data) {int} order_code 订单编号
     * @apiParam (输出字段-data-data) {string} quota 额度明细/元
     * @apiParam (输出字段-data-data) {string} category_name 收支类型
     * @apiParam (输出字段-data-data) {string} create_time 时间
     * @apiParam (输出字段-data) {array} extra 其他信息
     * @apiParam (输出字段-data-extra) {string} logistics_name 物流企业
     */
    public function actionGetLogisticsDailyQuotaLog()
    {
        $search = $this->getSearch();
        $attr = array(
            'a.category'=>$search['category'],
            'a.create_time>'=>$search['create_time_start'],
            'a.create_time<'=>$search['create_time_end'],
            'a.logistics_id'=>$search['logistics_id'],
        );
        $logistics_id = $search['logistics_id'];

        try {
            $service = new \app\ddd\Logistics\Application\LogisticsCompany\LogisticsCompanyService();
            $logisticsCompany = $service->getLogisticsCompany($logistics_id);

            $where = $this->getWhereSql($attr);

            $sql = "SELECT  {col}
                FROM t_logistics_quota_log a
                     left join t_order b on a.relation_id=b.order_id

                " . $where . " ORDER BY a.log_id DESC";

            $fields = 'a.relation_id,a.create_time,round(a.quota/100,2)quota,a.category,b.code order_code';

            $data = $this->getPageData($sql, $fields);

            if (Utility::isEmpty($data->data)) {
                $this->returnSuccess([],['logistics_name' => $logisticsCompany['name']]);
            }


            foreach ($data->data as & $datum) {
                $datum['category_name'] = Map::getStatusName('logistics_quota_log_category', $datum['category']);
                $datum['quota'] = number_format($datum['quota'],2);

                $datum['is_can_view'] = true;
                $datum['is_can_edit'] = true;

            }

            $this->returnSuccess($data, ['logistics_name' => $logisticsCompany['name']]);
        }
        catch(Exception $e){
            $this->returnError(BusinessError::outputError(\RetailError::$OPERATE_FAILED, array('reason' => $e->getMessage())));
        }
    }

}

