<?php
/**
 * Desc: 企业每日额度
 * User: wwb
 * Date: 2017/10/9 0009
 * Time: 10:03
 */


class LogisticsQuotaLimitController extends WebAPIController
{
    public function pageInit()
    {
        parent::pageInit(); // TODO: Change the autogenerated stub
        $this->rightCode = 'enterpriseDayQuota';
    }
    /**
     * @api {POST} /webAPI/LogisticsQuotaLimit/list [list]企业每日限额列表
     * @apiName list
     * @apiGroup WebAPI - LogisticsQuotaLimit
     * @apiVersion 1.0.0
     * @apiParam (输入字段) {string} search 查询字段，<font color=red>非必填</font>
     * @apiParam (输入字段) {int} page 页数 <font color=red>非必填</font>
     * @apiParam (输入字段) {int} pageSize 分页大小 <font color=red>非必填</font>
     * @apiExample {json} 输入示例:
     * {
     * "page":2,
     * "pageSize":15,
     * "search"{
     *      "code":'WL201808',
     *      "create_time_start":'2018-08-08',
     *      "create_time_end":'2018-08-08',
     *      }
     * }
     * @apiSuccessExample {json} 输出示例:
     *{
     *"state": 0,
     *"data": {
     *      "pageSize": 10,
     *      "totalPages": 1,
     *      "page": "1",
     *      "totalRows": "1",
     *      "data": [{
     *               "limit_id": "1",
     *               "code": "WL201808",
     *               "rate": "0.6",
     *               "create_time": "2018-08-16",
     *               "create_user_name": '张三',
     *          }],
     *      }
     *}
     * @apiParam (输出字段) {string} state 状态码
     * @apiParam (输出字段) {array} data 数据信息
     * @apiParam (输出字段-data) {int} totalPages 列表总页数
     * @apiParam (输出字段-data) {int} totalRows 列表总记录数
     * @apiParam (输出字段-data) {int} page 当前页数
     * @apiParam (输出字段-data) {int} pageSize 每页显示记录数
     * @apiParam (输出字段-data) {array} data 列表行数据信息
     * @apiParam (输出字段-data-data) {int} limit_id 标识
     * @apiParam (输出字段-data-data) {string} code 企业限额编号
     * @apiParam (输出字段-data-data) {string} rate 当日额度占比
     * @apiParam (输出字段-data-data) {string} create_time 变更时间
     * @apiParam (输出字段-data-data) {string} create_user_name 创建人
     */
	public function actionList()
	{
        $search = $this->getSearch();
        $attr = array(
            'a.code*'=>$search['code'],
            'a.create_time>'=>$search['create_time_start'].' 00:00:00',
            'a.create_time<'=>$search['create_time_end'].' 23:59:59'
        );

        $where = $this->getWhereSql($attr);

        $sql = "SELECT  {col}
                FROM t_logistics_quota_limit a
                     left join t_system_user b on a.create_user_id = b.user_id
                ".$where." ORDER BY limit_id DESC";

        $fields = 'a.limit_id,a.code,a.rate,a.create_time,a.create_user_id,b.name create_user_name';

        $data = $this->getPageData($sql, $fields);

        if(Utility::isEmpty($data->data)){
            $this->returnSuccess([]);
        }


        foreach($data->data as & $datum){
            //$datum['out_status_name'] = Map::getStatusName('contract_status', $datum['out_status']);
           // $datum['status_name'] = Map::getStatusName('contract_status', $datum['status']);
            $datum['is_can_view'] = false;
            $datum['is_can_edit'] = false;

        }

        $this->returnSuccess($data);
	}
    /**
     * @api {GET} /webAPI/logisticsQuotaLimit/detail [detail]获取每日限额详情
     * @apiName detail
     * @apiGroup WebAPI - LogisticsQuotaLimit
     * @apiVersion 1.0.0
     * @apiExample {json} 输入示例:
     * {
     * }
     * @apiSuccessExample {json} 输出示例:
     *{
     *"state": 0,
     *"data": {
     *      "search": null,
     *      "data": {
     *        "limit_id": "1",
     *        "code": "WL201808",
     *        "rate": "0.6",
     *        "create_time": "2018-08-16",
     *        "create_user_name": '张三',
     *      }
     *}
     * @apiParam (输出字段) {string} state 状态码
     * @apiParam (输出字段) {array} data 数据信息
     * @apiParam (输出字段-data) {limit_id} id 标识id
     * @apiParam (输出字段-data) {string} code 企业限额编号
     * @apiParam (输出字段-data) {string} rate 当日额度占比
     * @apiParam (输出字段-data) {string} create_time 变更时间
     * @apiParam (输出字段-data) {string} create_user_name 创建人
     */
    public function actionDetail()
    {
       /* $id = Mod::app()->request->getParam('limit_id');
        if (!Utility::checkQueryId($id)) {
            $this->returnError(RetailError::$PARAMS_PASS_ERROR);
        }*/

        //企业每日限额
        try{
        $service = new \app\ddd\Quota\Application\LogisticsQuotaLimit\LogisticsQuotaLimitService();
        $logisticsQuotaLimit=$service->getActiveLogisticsQuotaLimit();

        $LogisticsQuotaLimitDTO = new \app\ddd\Quota\DTO\LogisticsQuotaLimit\LogisticsQuotaLimitDTO();
        $LogisticsQuotaLimitDTO->fromEntity($logisticsQuotaLimit);

        $this->returnSuccess($LogisticsQuotaLimitDTO->getAttributes());
        }catch(Exception $e){
            $this->returnError(BusinessError::outputError(\RetailError::$OPERATE_FAILED, array('reason' => $e->getMessage())));
        }
    }



    /**
     * @api {POST} /webAPI/LogisticsQuotaLimit/add [add]企业每日限额 新增
     * @apiName add
     * @apiGroup WebAPI - LogisticsQuotaLimit
     * @apiVersion 1.0.0
     * @apiParam  {string} rate 当日额度占比 <font color=red>必填</font>
     *
     * @apiExample {json} 输入示例:
     * {
     * "rate"=>'0.6'
     * }
     * @apiSuccessExample {json} 输出示例:
     * 接收成功返回：
     * {
     *      "state":0,
     *      "data":"成功信息"
     * }
     * 失败返回：
     * {
     *      "state":1,
     *      "data": "错误信息"
     * }
     * @apiParam (输出字段) {string} state 错误码
     * @apiParam (输出字段) {array} data 操作信息
     */

    public function actionAdd()
    {
        $rate = $this->getRestParam('rate');
        if(empty($rate)){
            $this->returnError('企业当日可用额度不能为空');
        }
        if(!is_numeric($rate)){
            $this->returnError('企业当日可用额度不能为非数字');
        }

        try{

            $servive = new \app\ddd\Quota\Application\LogisticsQuotaLimit\LogisticsQuotaLimitService();
            $result = $servive->create($rate);
            if($result)
                $this->returnSuccess();

        }catch(Exception $e){
            //$this->returnError(\BusinessError::outputError(\RetailError::$OPERATE_FAILED,array('reason'=>$this->formatModelErrors($e->getErrors()))));
            $this->returnError(\BusinessError::outputError(\RetailError::$OPERATE_FAILED,array('reason'=>$e->getMessage())));
        }
    }
}

