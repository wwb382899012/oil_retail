<?php

use app\ddd\Admin\Application\Module\ModuleService;
use app\ddd\Admin\DTO\Module\ModuleActionTreeDTO;
use app\ddd\Admin\DTO\Module\SystemModuleDTO;

/**
 * User: liyu
 * Date: 2018/9/6
 * Time: 16:33
 * Desc: ModuleController.php
 */
class ModuleController extends WebAPIController
{
    public function pageInit() {
        parent::pageInit(); // TODO: Change the autogenerated stub
        $this->rightCode = 'system-module';
//        $this->publicActions = ['index', 'save', 'detail', 'del'];
    }


    /**
     * @api {POST} admin/module/index 系统模块菜单树
     * @apiName index
     * @apiExample {json} 输入示例:
     *{
     * }
     * @apiSuccessExample {json} 输出示例:
     * 成功返回：
     *{
     *    "state": 0,
     *    "data": [
     *        {
     *            "id": "1",
     *            "name": "系统管理",
     *            "code": "system",
     *            "parent_id": "0",
     *            "children": {
     *                "2": {
     *                    "id": "2",
     *                    "name": "模块管理",
     *                    "code": "systemmodule",
     *                    "parent_id": "1",
     *                    "children": []
     *                },
     *                "3": {
     *                    "id": "3",
     *                    "name": "系统用户",
     *                    "code": "systemuser",
     *                    "parent_id": "1",
     *                    "children": []
     *                },
     *                "4": {
     *                    "id": "4",
     *                    "name": "角色管理",
     *                    "code": "systemrole",
     *                    "parent_id": "1",
     *                    "children": []
     *                }
     *            }
     *        }
     *    ]
     *}
     * @apiParam (输出字段) {string} code 错误码，为0时表示成功，其他参考错误码说明
     * @apiParam (输出字段) {string} data 成功或错误信息
     * @apiGroup admin/module
     * @apiVersion 1.0.0
     */
    public function actionIndex() {
        $tree = ModuleService::service()->getAllModuleTree();
        $treeInfo = ModuleActionTreeDTO::createFromTree($tree);
        $treeInfoArr = $treeInfo->getAttributes();
        $this->returnSuccess($treeInfoArr);
    }


    /**
     * @api {POST} admin/module/save 保存
     * @apiName save
     * @apiExample {json} 输入示例:
     *{
     *    "name": "角色管理",  //模块名称
     *    "code": "systemrole", //模块权限码
     *  "icon": "<i class= \"icon icon-shezhi \"></i>",
     *  "system_id":"11", //所属系统
     *  "parent_id":1, //上级模块
     *  "parent_ids":"0,1,",  //父级模块路径
     *  "page_url":"/role/",  //页面地址
     *  "actions":[{"name":"\u5217\u8868","code":"index"},{"name":"\u8be6\u60c5","code":"detail"}], //模块操作 数组
     *  "is_menu":1, //是否菜单
     *  "status":1, //是否启用
     *  "order_index":1, //排序码
     *  "is_public":1, //是否公开
     *  "is_external":1 //是否外部链接
     *  "remark":"ddddd" //备注
     *}
     * @apiSuccessExample {json} 输出示例:
     * 成功返回：
     *{
     *    "code": 0,
     *    "data": "操作成功！"
     *}
     * @apiParam (输出字段) {string} code 错误码，为0时表示成功，其他参考错误码说明
     * @apiParam (输出字段) {string} data 成功或错误信息
     * @apiGroup admin/module
     * @apiVersion 1.0.0
     */
    public function actionSave() {
        $params = Mod::app()->request->getRestParams();
        //var_dump($params);
        if (empty($params)) {
            $this->returnError('参数错误');
        }
        $dto = new SystemModuleDTO();
        $dto->assignDTO($params);
        //var_dump($dto);
        $res = ModuleService::service()->save($dto);
//        if (is_array($res)) {
//            $this->returnApiValidateError($res);
//        } else {
        if ($res !== true)
            $this->returnError($res);
        else
            $this->returnSuccess();
    }

    /**
     * @api {GET} /admin/module/detail [detail]系统模块详情
     * @apiName detail
     * @apiGroup admin - module
     * @apiVersion 1.0.0
     * @apiParam (输入字段) {int} id 模块ID <font color=red>必填</font>
     * @apiExample {json} 输入示例:
     * {
     * "id":2
     * }
     * @apiSuccessExample {json} 输出示例:
     *{
     *    "state": 0,
     *    "data": {
     *        "user_id": "2",
     *        "user_name": "liyu",
     *        "password": "e10adc3949ba59abbe56e057f20f883e",
     *        "role_array": null,
     *        "main_role_id": null,
     *        "main_role_name": null,
     *        "confirmPassword": null,
     *        "identity": "",
     *        "weixin": "",
     *        "phone": "15013408878",
     *        "email": "",
     *        "status": "1",
     *        "is_right_role": null,
     *        "name": "李钰",
     *        "remark": ""
     *    }
     *}
     * @apiParam (输出字段) {string} state 状态码
     * @apiParam (输出字段) {array} data 数据信息
     */
    public function actionDetail() {
        $id = Mod::app()->request->getParam('id');
        if (!Utility::checkQueryId($id)) {
            $this->returnError(RetailError::$PARAMS_PASS_ERROR);
        }

        $service = new ModuleService();
        $module = $service->getModuleDetail($id);
        if (empty($module))
            $this->returnError(RetailError::$MODULE_INFO_NOT_EXIST, array('id' => $id));

        $this->returnSuccess($module);
    }

    /**
     * @api {GET} /admin/module/del [del]模块信息删除
     * @apiName del
     * @apiGroup admin - module
     * @apiVersion 1.0.0
     * @apiParam (输入字段) {int} id 模块ID <font color=red>必填</font>
     * @apiExample {json} 输入示例:
     *{
     *    id:5
     *}
     * @apiSuccessExample {json} 输出示例:
     * 接收成功返回：
     * {
     *      "state":0,
     *      "data":"成功信息"
     * }
     * 失败返回：
     * {
     *      "state":1,
     *      "data": "错误信息"
     * }
     * @apiParam (输出字段) {string} state 错误码
     * @apiParam (输出字段) {array} data 操作信息
     */
    public function actionDel() {
        $id = Mod::app()->request->getParam("id");
        if (empty($id))
            $this->returnError(RetailError::$PARAMS_PASS_ERROR);
        $res = ModuleService::service()->delModule($id);
        if ($res === true) {
//            \Utility::addActionLog("", "删除用户", "SystemUser", $id);
            $this->returnSuccess();
        } else
            $this->returnError($res);
    }

}