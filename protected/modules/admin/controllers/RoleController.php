<?php

use app\ddd\Admin\Application\Right\AuthorizeService;
use ddd\Admin\Application\Role\RoleService;
use ddd\Admin\DTO\Role\RoleRightDTO;
use ddd\Admin\DTO\Role\SystemRoleDTO;

/**
 * User: liyu
 * Date: 2018/9/7
 * Time: 14:38
 * Desc: RoleController.php
 */
class RoleController extends WebAPIController
{

    public function pageInit() {
        parent::pageInit(); // TODO: Change the autogenerated stub
        $this->rightCode = 'system-role';
//        $this->publicActions = ["list", "detail", "save", 'del', 'roleRight','saveRight'];
    }


    /**
     * @api {POST} /admin/role/list [list]系统角色列表
     * @apiName list
     * @apiGroup admin - role
     * @apiVersion 1.0.0
     * @apiParam (输入字段) {string} search 查询字段，<font color=red>非必填</font>
     * @apiParam (输入字段) {int} page 页数 <font color=red>非必填</font>
     * @apiParam (输入字段) {int} pageSize 分页大小 <font color=red>非必填</font>
     * @apiExample {json} 输入示例:
     * {
     * "page":2,
     * "pageSize":15,
     * "search"{
     *      "name":'超级管理员',
     *      }
     * }
     * @apiSuccessExample {json} 输出示例:
     *{
     *    "state": 0,
     *    "data": {
     *        "search": null,
     *        "data": {
     *            "pageCount": 1,
     *            "rows": [
     *                {
     *                    "role_id": "1",
     *                    "name": "超级管理员",
     *                    "right_codes": null,
     *                    "order_index": "0",
     *                    "type": "0",
     *                    "status": "0",
     *                    "remark": null,
     *                    "create_user_id": "0",
     *                    "create_time": null,
     *                    "update_user_id": "0",
     *                    "update_time": null
     *                }
     *            ],
     *            "total": "1",
     *            "page": 1
     *        }
     *    }
     *}
     * @apiParam (输出字段) {string} state 状态码
     * @apiParam (输出字段) {array} data 数据信息
     * @apiParam (输出字段-data) {string} search 查询字段
     * @apiParam (输出字段-data) {array} data 列表数据
     * @apiParam (输出字段-data-data) {int} pageCount 列表总页数
     * @apiParam (输出字段-data-data) {int} total 列表总记录数
     * @apiParam (输出字段-data-data) {int} page 当前页数
     * @apiParam (输出字段-data-data) {array} rows 列表行数据信息
     */
    public function actionList() {
        $attr = $this->getSearch();
        $sql = "select {col}"
            . " from t_system_role"
            . $this->getWhereSql($attr);
        $sql .= " order by role_id desc ";

        $data = $this->getPageData($sql, "*");

        if (empty($data)) {
            $this->returnSuccess([]);
        }

        foreach ($data->data as & $datum) {
            $datum['is_can_del'] = true;
            $datum['is_can_auth'] = true;
            $datum['is_can_edit'] = true;
            $datum['is_can_view'] = true;

            //超级管理员不能被删除
//            if (UserUtility::isAdminUser([$datum['role_id']])) {
//                $datum['is_can_auth'] = false;
//                $datum['is_can_edit'] = false;
//                //当前操作用户是超级管理员，允许编辑、删除其他管理员账号
////                if (UserUtility::isAdminOfCurrentUser()) {
////                    $datum['is_can_auth'] = true;
////                    $datum['is_can_edit'] = true;
////                }
//            }
        }

        $this->returnSuccess($data);
    }


    /**
     * @api {GET} /admin/role/save [save]角色信息修改保存
     * @apiName save
     * @apiGroup admin - role
     * @apiVersion 1.0.0
     * @apiParam (输入字段) {int} role_id 角色ID <font color=red>修改时必填</font>
     * @apiParam (输入字段) {string} name 角色名 <font color=red>必填</font>
     * @apiParam (输入字段) {int} status 状态 <font color=red>必填</font> //0未启用 1启用
     * @apiParam (输入字段) {string} remark 说明
     * @apiExample {json} 输入示例:
     *{
     *    role_id:5,
     *    name: "超级管理员",
     *    status: 1,
     *    remark: "xxx",
     *    order_index: 1, //排序码
     *}
     * @apiSuccessExample {json} 输出示例:
     * 接收成功返回：
     * {
     *      "state":0,
     *      "data":"成功信息"
     * }
     * 失败返回：
     * {
     *      "state":1,
     *      "data": "错误信息"
     * }
     * @apiParam (输出字段) {string} state 错误码
     * @apiParam (输出字段) {array} data 操作信息
     */
    public function actionSave() {
        $params = $this->getRestParams();
        if (empty($params)) {
            $this->returnError(RetailError::$PARAMS_PASS_ERROR);
        }

        $dto = new SystemRoleDTO();
        $dto->assignDTO($params);
        if (!$dto->validate()) {
            $this->returnError(BusinessError::outputError(RetailError::$OPERATE_FAILED, array('reason' => $this->formatModelErrors($dto->getErrors()))));
        }

        try {
            $entity = $dto->toEntity();
            $service = new RoleService();
            $res = $service->save($entity);
            if (is_string($res))
                $this->returnError($res);
            else
                $this->returnSuccess();
        } catch (Exception $e) {
            $this->returnError(BusinessError::outputError(RetailError::$OPERATE_FAILED, array('reason' => $e->getMessage())));
        }
    }

    /**
     * @api {GET} /admin/role/detail [detail]角色详情
     * @apiName detail
     * @apiGroup admin - role
     * @apiVersion 1.0.0
     * @apiParam (输入字段) {int} user_id 用户ID <font color=red>必填</font>
     * @apiExample {json} 输入示例:
     * {
     * "role_id":2
     * }
     * @apiSuccessExample {json} 输出示例:
     *{
     *    "state": 0,
     *    "data": {
     *        "user_id": "2",
     *        "user_name": "liyu",
     *        "password": "e10adc3949ba59abbe56e057f20f883e",
     *        "role_array": null,
     *        "main_role_id": null,
     *        "main_role_name": null,
     *        "confirmPassword": null,
     *        "identity": "",
     *        "weixin": "",
     *        "phone": "15013408878",
     *        "email": "",
     *        "status": "1",
     *        "is_right_role": null,
     *        "name": "李钰",
     *        "remark": ""
     *    }
     *}
     * @apiParam (输出字段) {string} state 状态码
     * @apiParam (输出字段) {array} data 数据信息
     */
    public function actionDetail() {
        $id = Mod::app()->request->getParam('role_id');
        if (!Utility::checkQueryId($id)) {
            $this->returnError(RetailError::$PARAMS_PASS_ERROR);
        }

        //物流企业
        $service = new RoleService();
        $user = $service->getRoleDetail($id);
        if (empty($user))
            $this->returnError(RetailError::$ROLE_INFO_NOT_EXIST, array('role_id' => $id));

        $this->returnSuccess($user);
    }

    /**
     * @api {GET} /admin/role/del [del]角色信息删除
     * @apiName del
     * @apiGroup admin - role
     * @apiVersion 1.0.0
     * @apiParam (输入字段) {int} role_id 用户ID <font color=red>必填</font>
     * @apiExample {json} 输入示例:
     *{
     *    role_id:2,
     *}
     * @apiSuccessExample {json} 输出示例:
     * 接收成功返回：
     * {
     *      "state":0,
     *      "data":"成功信息"
     * }
     * 失败返回：
     * {
     *      "state":1,
     *      "data": "错误信息"
     * }
     * @apiParam (输出字段) {string} state 错误码
     * @apiParam (输出字段) {array} data 操作信息
     */
    public function actionDel() {
        $id = $this->getRestParam('role_id');
        if (empty($id))
            $this->returnError(RetailError::$PARAMS_PASS_ERROR);
        $res = RoleService::service()->delRole($id);
        if ($res === true) {
//            \Utility::addActionLog("", "删除用户", "SystemUser", $id);
            $this->returnSuccess();
        } else
            $this->returnError($res);
    }


    /**
     * @api {GET} /admin/role/roleRight [roleRight] 获取角色的权限
     * @apiName roleRight
     * @apiParam (输入字段) {int} role_id 角色ID <font color=red>必填</font>
     * @apiExample {json} 输入示例:
     * {
     *  'role_id':2
     * }
     * @apiSuccessExample {json} 输出示例:
     * 接收成功返回，注意，该接口为异步接口，只返回接收成功：
     *{
     *    "state": 0,
     *    "data": {
     *        "role_right": [
     *            {
     *                "actions": null,
     *                "id": 1,
     *                "name": "系统管理",
     *                "code": "system",
     *                "parent_id": 0
     *            },
     *            {
     *                "actions": [
     *                    {
     *                        "name": "列表",
     *                        "code": "index"
     *                    },
     *                    {
     *                        "name": "详情",
     *                        "code": "detail"
     *                    }
     *                ],
     *                "id": 2,
     *                "name": "模块管理",
     *                "code": "systemmodule",
     *                "parent_id": 1
     *            },
     *            {
     *                "actions": [
     *                    {
     *                        "name": "列表",
     *                        "code": "index"
     *                    },
     *                    {
     *                        "name": "详情",
     *                        "code": "detail"
     *                    }
     *                ],
     *                "id": 3,
     *                "name": "系统用户",
     *                "code": "systemuser",
     *                "parent_id": 1
     *            }
     *        ]
     *    }
     *}
     * 失败返回：
     * {
     *      "code":1,
     *      "data":{}
     * }
     * @apiParam (输出字段) {string} code 错误码
     * @apiParam (输出字段) {array} data 成功时返回交易号，错误时返回错误码
     * @apiGroup admin - role
     * @apiVersion 1.0.0
     */
    public function actionRoleRight() {
        $roleId = Mod::app()->request->getParam('role_id');
        if (empty($roleId)) {
            $this->returnError(RetailError::$PARAMS_PASS_ERROR);
        }
        $roleRight = AuthorizeService::service()->getRoleRight($roleId);
        $res = ['role_right' => []];
        if (!empty($roleRight)) {
            $res = $roleRight->getAttributes();
            $res['role_right'] = $res['moduleActions'];
            unset($res['moduleActions']);
        }

        $this->returnSuccess($res);
    }

    /**
     * @api {POST} /admin/role/saveRight [saveRight]保存角色的权限
     * @apiName saveRight
     * @apiExample {json} 输入示例:
     * {
     *  "role_id":1,
     *  "role_right": [
     *            {
     *                "actions": null,
     *                "id": 1,
     *                "name": "系统管理",
     *                "code": "system",
     *                "parent_id": 0
     *            },
     *            {
     *                "actions": [
     *                    {
     *                        "name": "列表",
     *                        "code": "index"
     *                    },
     *                    {
     *                        "name": "详情",
     *                        "code": "detail"
     *                    }
     *                ],
     *                "id": 2,
     *                "name": "模块管理",
     *                "code": "systemmodule",
     *                "parent_id": 1
     *            },
     *            {
     *                "actions": [
     *                    {
     *                        "name": "列表",
     *                        "code": "index"
     *                    },
     *                    {
     *                        "name": "详情",
     *                        "code": "detail"
     *                    }
     *                ],
     *                "id": 3,
     *                "name": "系统用户",
     *                "code": "systemuser",
     *                "parent_id": 1
     *            }
     *        ]
     * }
     * @apiSuccessExample {json} 输出示例:
     * 接收成功返回，注意，该接口为异步接口，只返回接收成功：
     * {
     *      "code":1,
     *      "data":{}
     * }
     * 失败返回：
     * {
     *      "code":1,
     *      "data":{}
     * }
     * @apiParam (输出字段) {string} code 错误码
     * @apiParam (输出字段) {array} data 成功时返回交易号，错误时返回错误码
     * @apiGroup admin - role
     * @apiVersion 1.0.0
     */
    public function actionSaveRight() {
        $params = $this->getRestParams();
        if (empty($params)) {
            $this->renderError(RetailError::$PARAMS_PASS_ERROR);
        }

        $dto = new RoleRightDTO();
        $dto->assignDTO($params);
        if (!$dto->validate()) {
            $this->returnError(BusinessError::outputError(RetailError::$OPERATE_FAILED, array('reason' => $this->formatModelErrors($dto->getErrors()))));
        }

        try {
            $entity = $dto->toEntity();//TODO
            $service = new RoleService();
            $res = $service->saveRoleRight($entity);
            if (is_string($res))
                $this->returnError($res);
            else
                $this->returnSuccess();
        } catch (Exception $e) {
            $this->returnError(BusinessError::outputError(RetailError::$OPERATE_FAILED, array('reason' => $e->getMessage())));
        }
    }
}